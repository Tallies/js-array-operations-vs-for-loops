const nums = [0, 1, 2, 3];
const numsCopy = nums;

/*********************************************************************************************/
/* Constructing                                                                              */
/*********************************************************************************************/
//
// console.log("[0, 1, 2, 3]: ", nums);
// console.log("Array.of: ", Array.of(0, 1, 2, 3));
// console.log('Array(): ', Array(4));

/* End of Constructing */


/*********************************************************************************************/
/*********************************************************************************************/


/* Mutating methods: YOU SHOULD AVOID USING THESE METHODS, UNLESS YOU'VE MADE A DEEP COPY */

/*********************************************************************************************/
/* push                                                                                       */
/*********************************************************************************************/
// const newCount = nums.push(0);
// console.log("push: ", newCount, ": ",  nums, "[copy: ", numsCopy, "]");



/*********************************************************************************************/
/* pop                                                                                       */
/*********************************************************************************************/
// const lastValue = nums.pop();
// console.log("pop: ", lastValue, ": ",  nums, "[copy: ", numsCopy, "]");



/*********************************************************************************************/
/* fill                                                                                       */
/*********************************************************************************************/
// const filled = nums.fill(-1, 1, 3);
// console.log("fill: ", filled, ": ",  nums, "[copy: ", numsCopy, "]");



/*********************************************************************************************/
/* reverse                                                                                   */
/*********************************************************************************************/
// const reversed = nums.reverse();
// console.log("reverse: ", reversed, ": ",  nums, "[copy: ", numsCopy, "]");



/*********************************************************************************************/
/* sort                                                                                      */
/*********************************************************************************************/
// const reverse = nums.reverse();
// console.log("reverse: ", reverse, ", nums: ",  nums, "[copy: ", numsCopy, "]");
// reverse.sort();
// console.log("sort: ", reverse, ", nums: ",  nums, "[copy: ", numsCopy, "]");



/*********************************************************************************************/
/* splice                                                                                    */
/*********************************************************************************************/
// const deleted = nums.splice(2,2);
// console.log("splice: ", deleted, ": ",  nums, "[copy: ", numsCopy, "]");
//
// nums.push(deleted[0]);
// nums.push(deleted[1]);
//
// const deleted2 = nums.splice(2,2, 5, 6, 7);
// console.log("splice2: ", deleted2, ": ",  nums, "[copy: ", numsCopy, "]");

/* End of Mutating methods  */


/*********************************************************************************************/
/*********************************************************************************************/


/* Combining Arrays - Concat & Spread operator */

/*********************************************************************************************/
/* concat                                                                                    */
/* https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/concat */
/*********************************************************************************************/
// const nums2 = [5, 6, 7, 8];
// // const nums3 = nums.concat(nums2);
// const nums3 = nums.concat(nums2, 4, 6, [7, 9]);
// console.log("spread: ", nums, ", nums2: ", nums2, ", nums3: ", nums3);



/*********************************************************************************************/
/* Spread                                                                                    */
/* https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Spread_syntax */
/*********************************************************************************************/
// const nums2 = [5, 6, 7, 8];
// // const nums3 = [...nums, ...nums2];
// const nums3 = [...nums, ...nums2, 4, 6, [7, 9]];
// console.log("spread: ", nums, ", nums2: ", nums2, ", nums3: ", nums3);
// console.log(...nums3);

/* End of Combining Arrays */


/*********************************************************************************************/
/*********************************************************************************************/


/* for loops - for, for...in, for...of */

/*********************************************************************************************/
/* for                                                                                       */
/* https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Statements/for          */
/*********************************************************************************************/
// for(let index = 0; index < nums.length; index++){
//     if(nums[index] === 3)
//         console.log("Found 3");
// }



/*********************************************************************************************/
/* for..in                                                                                   */
/* https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Statements/for...in     */
/*********************************************************************************************/
// for(const idx in nums) {
//     if(nums[idx] === 3) {
//         console.log("Found 3");
//     }
// }



/*********************************************************************************************/
/* for..of                                                                                   */
/* https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Statements/for...of     */
/*********************************************************************************************/
// for(const num of nums) {
//     if(num === 3) {
//         console.log("Found 3");
//     }
// }


